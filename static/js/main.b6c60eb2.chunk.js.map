{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ErrorView/ErrorView.module.css","components/Container/Container.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/LoaderComponent/LoaderComponent.module.css","components/Searchbar/Searchbar.module.css","services/apiService.js","components/Container/Container.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/LoaderComponent/LoaderComponent.js","components/Modal/Modal.js","components/ErrorView/error.jpg","components/ErrorView/ErrorView.js","App.js","index.js"],"names":["module","exports","apiService","query","page","a","axios","get","data","hits","Container","children","className","s","container","Searchbar","onHandleSubmit","useState","setQuery","header","form","onSubmit","e","preventDefault","trim","toast","info","type","btn","label","input","value","autoComplete","autoFocus","placeholder","onChange","target","ImageGalleryItem","webformatURL","largeImageURL","tags","onOpenModal","item","src","alt","data-source","image","onClick","ImageGallery","images","list","map","id","Button","onLoadMore","LoaderComponent","overlay","color","height","width","timeout","modalRoot","document","querySelector","Modal","handleKeyDown","code","props","onToggleModal","handleBackdropClick","currentTarget","window","addEventListener","this","removeEventListener","createPortal","backdrop","modal","Component","ErrorView","texterror","role","wrapper","errorImage","text","App","setImages","setLargeImageURL","setPage","error","setError","isLoading","setIsLoading","showModal","setShowModal","useEffect","request","length","prevImages","fetchImages","toggleModal","scrollPage","setTimeout","scrollBy","top","documentElement","clientHeight","behavior","newSearch","dataset","source","prevPage","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b6c60eb2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ImageGalleryItem_item__QUBwq\",\"image\":\"ImageGalleryItem_image__3eFyd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__Uq3vR\",\"modal\":\"Modal_modal__3_xoW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ErrorView_wrapper__Po_2A\",\"text\":\"ErrorView_text__x9h4X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1ee43\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ImageGallery_list__12iGC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__3iXWh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"LoaderComponent_overlay__1mcCq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Searchbar_header__2MKRx\",\"form\":\"Searchbar_form__2An1L\",\"btn\":\"Searchbar_btn__1jvYG\",\"label\":\"Searchbar_label__2W_hT\",\"input\":\"Searchbar_input__8cEDP\"};","import axios from 'axios';\r\n\r\nconst apiService = async (query, page) => {\r\n  const { data } = await axios.get(\r\n    `https://pixabay.com/api/?q=${query}&page=${page}&key=19785820-0b6e1c9911d9fa9c4dbff5f81&image_type=photo&orientation=horizontal&per_page=12`,\r\n  );\r\n  return data.hits;\r\n};\r\n\r\nexport default apiService;","import PropTypes from 'prop-types';\r\nimport s from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;","import { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Searchbar.module.css';\r\n\r\nfunction Searchbar({ onHandleSubmit }) {\r\n  const [query, setQuery] = useState('');\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    if (query.trim() === '') {\r\n      return toast.info('Please enter a value for search images!');\r\n    }\r\n    onHandleSubmit(query);\r\n    setQuery('');\r\n  };\r\n\r\n  return (\r\n    <header className={s.header}>\r\n      <form className={s.form} onSubmit={onSubmit}>\r\n        <button type=\"submit\" className={s.btn}>\r\n          <span className={s.label}>Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          value={query}\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          onChange={({ target }) => setQuery(target.value)}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onHandleSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Searchbar;","import PropTypes from 'prop-types';\r\nimport s from './ImageGalleryItem.module.css';\r\n\r\nfunction ImageGalleryItem({ webformatURL, largeImageURL, tags, onOpenModal }) {\r\n  return (\r\n    <li className={s.item}>\r\n      <img\r\n        src={webformatURL}\r\n        alt={tags}\r\n        data-source={largeImageURL}\r\n        className={s.image}\r\n        onClick={onOpenModal}\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  largeImageURL: PropTypes.string.isRequired,\r\n  tags: PropTypes.string.isRequired,\r\n  webformatURL: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;","import PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\nimport s from './ImageGallery.module.css';\r\n\r\nfunction ImageGallery({ images, onOpenModal }) {\r\n  return (\r\n    <ul className={s.list}>\r\n      {images.map(({ id, webformatURL, largeImageURL, tags }) => (\r\n        <ImageGalleryItem\r\n          key={id}\r\n          webformatURL={webformatURL}\r\n          largeImageURL={largeImageURL}\r\n          tags={tags}\r\n          onOpenModal={onOpenModal}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n  onOpenModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;","import PropTypes from 'prop-types';\r\nimport s from './Button.module.css';\r\n\r\nfunction Button({ onLoadMore }) {\r\n  return (\r\n    <button type=\"button\" className={s.btn} onClick={onLoadMore}>\r\n      Load more\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  onLoadMore: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;","import Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport s from './LoaderComponent.module.css';\r\n\r\nfunction LoaderComponent() {\r\n  return (\r\n    <div className={s.overlay}>\r\n      <Loader\r\n        type=\"ThreeDots\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        timeout={0}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoaderComponent;","import { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onToggleModal();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      this.props.onToggleModal();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { largeImageURL } = this.props;\r\n\r\n    return createPortal(\r\n      <div className={s.backdrop} onClick={this.handleBackdropClick}>\r\n        <div className={s.modal}>\r\n          <img src={largeImageURL} alt=\"\" />\r\n        </div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  onToggleModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Modal;","export default __webpack_public_path__ + \"static/media/error.c8c5cc46.jpg\";","import PropTypes from 'prop-types';\r\nimport errorImage from './error.jpg';\r\nimport s from './ErrorView.module.css';\r\n\r\nfunction ErrorView({ texterror }) {\r\n  return (\r\n    <div role=\"alert\" className={s.wrapper}>\r\n      <img src={errorImage} width=\"650\" alt=\"sadcat\" />\r\n      <p text={texterror} className={s.text}>\r\n        {texterror}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nErrorView.propTypes = {\r\n  texterror: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ErrorView;","import { useState, useEffect } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport apiService from './services';\nimport Container from './components/Container';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\nimport LoaderComponent from './components/LoaderComponent';\nimport Modal from './components/Modal';\nimport ErrorView from './components/ErrorView';\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [images, setImages] = useState([]);\n  const [largeImageURL, setLargeImageURL] = useState('');\n  const [page, setPage] = useState(1);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    if (!query) return;\n    const fetchImages = async () => {\n      try {\n        const request = await apiService(query, page);\n        if (request.length === 0) {\n          return setError(`No results were found for ${query}!`);\n        }\n        setImages(prevImages => [...prevImages, ...request]);\n      } catch (error) {\n        setError('Something went wrong. Try again.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchImages();\n  }, [page, query]);\n\n  const searchImages = newSearch => {\n    setQuery(newSearch);\n    setImages([]);\n    setPage(1);\n    setError(null);\n    setIsLoading(true);\n  };\n\n  const onLoadMore = () => {\n    setIsLoading(true);\n    setPage(prevPage => prevPage + 1);\n    scrollPage();\n  };\n\n  const onOpenModal = e => {\n    setLargeImageURL(e.target.dataset.source);\n    toggleModal();\n  };\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const scrollPage = () => {\n    setTimeout(() => {\n      window.scrollBy({\n        top: document.documentElement.clientHeight - 160,\n        behavior: 'smooth',\n      });\n    }, 800);\n  };\n\n  return (\n    <Container>\n      <Searchbar onHandleSubmit={searchImages} />\n\n      {error && <ErrorView texterror={error} />}\n\n      {images.length > 0 && !error && (\n        <ImageGallery images={images} onOpenModal={onOpenModal} />\n      )}\n\n      {isLoading && <LoaderComponent />}\n\n      {!isLoading && images.length >= 12 && !error && (\n        <Button onLoadMore={onLoadMore} />\n      )}\n\n      {showModal && (\n        <Modal onToggleModal={toggleModal} largeImageURL={largeImageURL} />\n      )}\n      <ToastContainer autoClose={3700} />\n    </Container>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}